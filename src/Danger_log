Our server will sanitize all inputs and provide a no-throw guarentee. Our server will not stop running because of invalid inputs.

A few detailed assumptions other than those in the requirement:
  1. If the top-level tag is not <transations> or <create>, our server will print a error message to std::cerr and will not process the request.
  2. If the <transactions> tag has any child tag that is not <order> <cancel> or <query>, our server will not process or respond to them.
  3. if the <transactions> tag has no attr or invalid attr, all <order> child tag will correspond to a <error> tag in the result, while <cancel> or <query> tag will not have responds, since we do not know which user is sending the <transactions> request and a user can only <query> or <cancel> his own orders.
  4. A user can only use <transactions> to query or cancel his own orders, since it makes no sense for a user to cancel other's order.
  5. the value of amount attr can not be 0, since it makes no sence to buy or sell nothing. If the amount attr is 0, this order will not be created, it will recieve an error result instead.
  6. server can not match buy/sell from the same account
  7. If the <order> tag do not have enough attrs or has invalid attrs, it will add an <error> tag in results to indicate this error. 
  8. If the <cancel> tag or <query> tag has do not id attributes, they will print a error message and will not print any results.


Problems that we solved:
  1. When we have multipul testing thread sending requests to our server, our server will report "fatal: sorry, too many clients already" and exit. This happend because our server spawns too many threads and have too many connections with database and runs out of connection resources. We solve this by retring every time we failed to get a new connection.
